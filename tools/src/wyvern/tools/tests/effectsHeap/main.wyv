require platform

import debug

import api.file
import api.database
import api.memory

import Heap
import heap.localStorage
import heap.networkStorage
import heap.temporaryStorage

import wyvern.collections.list

// Low-level APIs
val file = file(platform)
val db = database(platform)
val mem = memory()

// Heap implementations (only ts isn't made up of stubs / only ts works)
val ls : Heap = localStorage(file)
val ns : Heap = networkStorage(db)
val ts : Heap = temporaryStorage(mem)

var heaps : list.List[Heap] = list.make[Heap]()
heaps.append(ls)
heaps.append(ns)
heaps.append(ts)

// Do things with the heaps
debug.print(ts.getWithDefault(0, () => "hello"))
debug.println()

ts.set(0, "goodbye")
ts.getWithDefault(0, () => "hello")
